version: 2.1
description: Aurelia v1

orbs:
  common: aurelia/common@volatile

commands:
  install_build_test_gulp:
    parameters:
      test_command:
        type: string
        default: "./node_modules/.bin/karma start --single-run"
      build_command:
        type: string
        default: "./node_modules/.bin/gulp build"
      prepare_release_command:
        type: string
        default: "./node_modules/.bin/gulp prepare-release"
    steps:
      - run:
          name: install
          command: |
            npm ci
            npm i jspm
            ./node_modules/.bin/jspm install
      - run:
          name: test
          command: <<parameters.test_command>>
      - run:
          name: build
          command: <<parameters.build_command>>
      - run:
          name: prepare-release
          command: <<parameters.prepare_release_command>>
  install_run_e2e_tests:
    parameters:
      test_repo:
        type: string
        default: "https://github.com/aurelia/e2e-tests"
      registry:
        type: string
        default: "http://localhost:4873"
    steps:
      - run:
        name: Install Chrome
        command: |
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
          sudo apt-get update
          sudo apt-get install google-chrome-stable
      - run:
          name: "install e2e tests"
          command: |
            git clone <<parameters.test_repo>>
            cd e2e-tests
            npm install --registry <<parameters.registry>>
            npm run build
      - run:
          name: "run the unit tests"
          command: |
            cd e2e-tests
            npm run test
      - run:
          name: "serve the test app"
          background: true
          command: |
            cd e2e-tests
            npm run run
      - run:
          name: "run the e2e tests"
          command: |
            cd e2e-tests
            npm run protractor
  merge_and_dist:
    parameters:
      from:
        type: string
      to:
        type: string
      message:
        type: string
        default: "chore(all): add latest build artifacts"
    steps:
      - run: git add dist/* --force
      - run: git stash
      - run: git checkout << parameters.to >>
      - run: git merge << parameters.from >> --no-ff --no-edit -Xtheirs
      - run: rm -rf dist
      - run: git add .
      - run: git stash pop
      - run: git add dist/* --force
      - run: git add .
      - run: git commit --allow-empty -m "<< parameters.message >>"
      - run: git push origin << parameters.to >>

jobs:
  build_test_external:
    parameters:
      repo_name:
        type: string
      process:
        type: string
        default: "gulp"
    executor: common/docker_circleci
    steps:
      - run: mkdir <<parameters.repo_name>>
      - common/clone_repo:
          repo_name: <<parameters.repo_name>>
          dir: <<parameters.repo_name>>
      - common/configure_git
      - common/setup_verdaccio
      - install_build_test_gulp
      - common/npm_publish
  build_test:
    parameters:
      process:
        type: string
        default: "gulp"
    executor: common/docker_circleci
    steps:
      - checkout
      - common/configure_git
      - common/setup_verdaccio
      - install_build_test_gulp
      - common/npm_publish
      - install_run_e2e_tests
  build_test_merge:
    parameters:
      process:
        type: string
        default: "gulp"
      from:
        type: string
      to:
        type: string
      message:
        type: string
        default: "chore(all): add latest build artifacts"
    executor: common/docker_circleci
    steps:
      - checkout
      - common/configure_git
      - common/setup_verdaccio
      - install_build_test_gulp
      - common/npm_publish
      - install_run_e2e_tests
      - merge_and_dist:
          from: <<parameters.from>>
          to: <<parameters.to>>
          message: <<parameters.message>>